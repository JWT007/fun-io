(window.webpackJsonp=window.webpackJsonp||[]).push([[4],{164:function(t,a,s){"use strict";s.r(a);var n=s(0),o=Object(n.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("div",{staticClass:"content"},[s("h1",{attrs:{id:"advanced-archive-processing"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#advanced-archive-processing","aria-hidden":"true"}},[t._v("#")]),t._v(" Advanced Archive Processing")]),t._v(" "),s("h2",{attrs:{id:"diffing-two-jar-files"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#diffing-two-jar-files","aria-hidden":"true"}},[t._v("#")]),t._v(" Diffing Two JAR Files")]),t._v(" "),s("div",{pre:!0},[s("p",[t._v("The following code diffs the base JAR file "),s("code",[t._v("base.jar")]),t._v(" to the update JAR file "),s("code",[t._v("update.jar")]),t._v(" and generates the delta JAR\nfile "),s("code",[t._v("delta.jar")]),t._v(".\nIn addition to the "),s("code",[t._v("CommonsCompress")]),t._v(" facade for accessing the archive files, it uses the "),s("code",[t._v("Delta")]),t._v(" facade for diffing\nthem:")])]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("static")]),t._v(" global"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("namespace"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("fun"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("io"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("commons"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("compress"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("CommonsCompress"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("jar"),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{attrs:{class:"token comment"}},[t._v("// from `fun-io-commons-compress`")]),t._v("\n"),s("span",{attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("static")]),t._v(" global"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("namespace"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("fun"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("io"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("delta"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Delta"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("diff"),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("                     "),s("span",{attrs:{class:"token comment"}},[t._v("// from `fun-io-delta`")]),t._v("\n\n"),s("span",{attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{attrs:{class:"token class-name"}},[t._v("Scratch")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{attrs:{class:"token function"}},[t._v("main")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("String"),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" args"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("throws")]),t._v(" Exception "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{attrs:{class:"token function"}},[t._v("diff")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("base")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token function"}},[t._v("jar")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token string"}},[t._v('"base.jar"')]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("update")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token function"}},[t._v("jar")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token string"}},[t._v('"update.jar"')]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("to")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token function"}},[t._v("jar")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token string"}},[t._v('"delta.jar"')]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("div",{pre:!0},[s("p",[t._v("If you wanted to use the module "),s("code",[t._v("fun-io-bios")]),t._v(" instead of "),s("code",[t._v("fun-io-commons-compress")]),t._v(", then, apart from configuring the\nclasspath, you would only have to edit the "),s("code",[t._v("import")]),t._v(" statement as shown in the next example.")])]),t._v(" "),s("h2",{attrs:{id:"patching-the-base-jar-file"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#patching-the-base-jar-file","aria-hidden":"true"}},[t._v("#")]),t._v(" Patching The Base JAR File")]),t._v(" "),s("div",{pre:!0},[s("p",[t._v("The following code patches the base JAR file "),s("code",[t._v("base.jar")]),t._v(" with the delta JAR file "),s("code",[t._v("delta.jar")]),t._v(" to an(other) update JAR\nfile "),s("code",[t._v("update.jar")]),t._v(".\nFor the purpose of illustration, it uses the "),s("code",[t._v("BIOS")]),t._v(" facade from the module "),s("code",[t._v("fun-io-bios")]),t._v(" instead of the\n"),s("code",[t._v("CommonsCompress")]),t._v(" facade from the module "),s("code",[t._v("fun-io-commons-compress")]),t._v(" for accessing the JAR file format using the JRE.\nFor production, using the "),s("code",[t._v("CommonsCompress")]),t._v(" facade is recommend for better accuracy and performance.\nIt also uses the "),s("code",[t._v("Delta")]),t._v(" facade again for patching the base archive file with the delta archive file:")])]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("static")]),t._v(" global"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("namespace"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("fun"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("io"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("bios"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("BIOS"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("jar"),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("     "),s("span",{attrs:{class:"token comment"}},[t._v("// from `fun-io-bios`")]),t._v("\n"),s("span",{attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("static")]),t._v(" global"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("namespace"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("fun"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("io"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("delta"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Delta"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("patch"),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{attrs:{class:"token class-name"}},[t._v("Scratch")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{attrs:{class:"token function"}},[t._v("main")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("String"),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" args"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("throws")]),t._v(" Exception "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{attrs:{class:"token function"}},[t._v("patch")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("base")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token function"}},[t._v("jar")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token string"}},[t._v('"base.jar"')]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("delta")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token function"}},[t._v("jar")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token string"}},[t._v('"delta.jar"')]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("to")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token function"}},[t._v("jar")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token string"}},[t._v('"update.jar"')]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h2",{attrs:{id:"diffing-two-directories"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#diffing-two-directories","aria-hidden":"true"}},[t._v("#")]),t._v(" Diffing Two Directories")]),t._v(" "),s("div",{pre:!0},[s("p",[t._v("The following code diffs the base directory "),s("code",[t._v("base")]),t._v(" to the update directory "),s("code",[t._v("update")]),t._v(" and generates the delta ZIP file\n"),s("code",[t._v("delta.zip")]),t._v(":")])]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("static")]),t._v(" global"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("namespace"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("fun"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("io"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("bios"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("BIOS"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("directory"),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("static")]),t._v(" global"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("namespace"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("fun"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("io"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("commons"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("compress"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("CommonsCompress"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("zip"),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("static")]),t._v(" global"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("namespace"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("fun"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("io"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("delta"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Delta"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("diff"),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{attrs:{class:"token class-name"}},[t._v("Scratch")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{attrs:{class:"token function"}},[t._v("main")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("String"),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" args"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("throws")]),t._v(" Exception "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{attrs:{class:"token function"}},[t._v("diff")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("base")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token function"}},[t._v("directory")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token string"}},[t._v('"base"')]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("update")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token function"}},[t._v("directory")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token string"}},[t._v('"update"')]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("to")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token function"}},[t._v("zip")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token string"}},[t._v('"delta.zip"')]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h2",{attrs:{id:"patching-the-base-directory"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#patching-the-base-directory","aria-hidden":"true"}},[t._v("#")]),t._v(" Patching The Base Directory")]),t._v(" "),s("div",{pre:!0},[s("p",[t._v("The following code patches the base directory "),s("code",[t._v("base")]),t._v(" with the delta ZIP file "),s("code",[t._v("delta.zip")]),t._v(" to the update directory\n"),s("code",[t._v("update")]),t._v(":")])]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("static")]),t._v(" global"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("namespace"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("fun"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("io"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("bios"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("BIOS"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("directory"),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("static")]),t._v(" global"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("namespace"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("fun"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("io"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("commons"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("compress"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("CommonsCompress"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("zip"),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("static")]),t._v(" global"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("namespace"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("fun"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("io"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("delta"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Delta"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("patch"),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{attrs:{class:"token class-name"}},[t._v("Scratch")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{attrs:{class:"token function"}},[t._v("main")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("String"),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" args"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("throws")]),t._v(" Exception "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{attrs:{class:"token function"}},[t._v("patch")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("base")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token function"}},[t._v("directory")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token string"}},[t._v('"base"')]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("delta")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token function"}},[t._v("zip")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token string"}},[t._v('"delta.zip"')]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("to")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token function"}},[t._v("directory")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token string"}},[t._v('"update"')]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h2",{attrs:{id:"computing-a-delta-model"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#computing-a-delta-model","aria-hidden":"true"}},[t._v("#")]),t._v(" Computing A Delta Model")]),t._v(" "),s("div",{pre:!0},[s("p",[t._v("Maybe you just want to examine the delta of two archive files or directories, but not generate a delta archive file or\ndirectory from that?\nThe following code diffs the base directory "),s("code",[t._v("base")]),t._v(" to the update directory "),s("code",[t._v("update")]),t._v(" and computes a delta model:")])]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{attrs:{class:"token keyword"}},[t._v("import")]),t._v(" global"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("namespace"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("fun"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("io"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("delta"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("model"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("DeltaModel"),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("static")]),t._v(" global"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("namespace"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("fun"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("io"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("bios"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("BIOS"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("directory"),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("static")]),t._v(" global"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("namespace"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("fun"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("io"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("delta"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Delta"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("diff"),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{attrs:{class:"token class-name"}},[t._v("Scratch")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{attrs:{class:"token function"}},[t._v("main")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("String"),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" args"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{attrs:{class:"token keyword"}},[t._v("throws")]),t._v(" Exception "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        DeltaModel model "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{attrs:{class:"token function"}},[t._v("diff")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("base")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token function"}},[t._v("directory")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token string"}},[t._v('"base"')]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("update")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token function"}},[t._v("directory")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token string"}},[t._v('"update"')]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("toModel")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        model"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("changedEntries")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("forEach")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("entry "),s("span",{attrs:{class:"token operator"}},[t._v("-")]),s("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{attrs:{class:"token comment"}},[t._v("/* do something with it */")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("The delta model has properties describing the changed, unchanged, added and removed entries.")])])}],!1,null,null,null);o.options.__file="advanced-archive-processing.md";a.default=o.exports}}]);